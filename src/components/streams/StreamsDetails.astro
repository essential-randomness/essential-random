---
import { getCollection } from "astro:content";

interface Props {
  startAt: Date;
  endAt: Date;
}
const { startAt, endAt } = Astro.props;
const streams = await getCollection(
  "streams",
  (stream) =>
    stream.data.scheduled_at > startAt && stream.data.scheduled_at < endAt
);
---

<local-time>
  <ol>
    {
      streams.map((stream) => (
        <li data-stream-slug={stream.slug}>
          <div set:html={stream.data.title} />
          <time datetime={stream.data.scheduled_at.toISOString()} />
          <div set:html={stream.data.description} />
        </li>
      ))
    }
  </ol>
</local-time>

<script>
  import "./LocalTime.ts";

  document.querySelectorAll("[data-stream-slug]").forEach((streamLi) => {
    const streamTime = new Date(
      streamLi.querySelector("time")!.getAttribute("datetime")!
    );
    if (streamTime < new Date(Date.now())) {
      streamLi.classList.add("passed");
    }
  });
</script>
<style>
  .passed {
    color: grey;
  }
</style>
