---
import { getCollection } from "astro:content";

interface Props {
  startAt: Date;
  endAt: Date;
}
const { startAt, endAt } = Astro.props;
const streams = await getCollection(
  "streams",
  (stream) =>
    stream.data.scheduled_at > startAt && stream.data.scheduled_at < endAt
);
const dateOptions = {
  month: "short",
  day: "numeric",
} as const;
const timeOptions = {
  timeStyle: "short",
} as const;
---

<local-time>
  <ul>
    {
      streams.map((stream) => {
        return (
          <li data-stream-slug={stream.slug}>
            <date
              datetime={stream.data.scheduled_at.toISOString()}
              data-datetime-options={JSON.stringify(dateOptions)}
            >
              {stream.data.scheduled_at.toLocaleString("en-US", {
                timeZone: "US/Pacific",
                ...dateOptions,
              })}
            </date>
            <time
              datetime={stream.data.scheduled_at.toISOString()}
              data-datetime-options={JSON.stringify(timeOptions)}
            >
              {stream.data.scheduled_at.toLocaleString("en-US", {
                timeZone: "US/Pacific",
                ...timeOptions,
              })}
            </time>

            <details open>
              <summary set:html={stream.data.title} />
              <div set:html={stream.data.description} />
            </details>
          </li>
        );
      })
    }
  </ul>
</local-time>

<style>
  ul {
    border: 1px solid #e3e3e3;
    padding: 0;
    margin: 0;
    max-width: 1000px;
    border-radius: 4px;
  }
  li {
    list-style: none;
    padding: 15px 20px;
    margin: 0;
  }

  li + li {
    border-top: 1px solid #f1f1f1;
  }

  summary {
    font-weight: bold;
    cursor: pointer;
  }
  details {
    width: 100%;
  }
  .passed {
    color: grey;
  }

  @media screen and (min-width: 700px) {
    li {
      display: flex;
    }

    date,
    time {
      min-width: 120px;
      width: 8%;
    }
    details {
      flex: 1;
    }
  }
</style>

<script>
  import "./LocalTime.ts";
  document.querySelectorAll("[data-stream-slug]").forEach((streamLi) => {
    const streamTime = new Date(
      streamLi.querySelector("time")!.getAttribute("datetime")!
    );
    if (streamTime < new Date(Date.now())) {
      streamLi.classList.add("passed");
    }
  });
</script>
