---
import Nav from "../components/Nav.astro";
import "./global.css";
import { Image } from "astro:assets";
import bobaWip from "../components/bobawip.png";

interface Props {
  title: string;
  preview?: string;
  description?: string;
}

const {
  title,
  description = "Ms Boba's experimental website. Open for business while construction is ongoing.",
  preview = "/og-image.png",
} = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <link rel="stylesheet" href="https://use.typekit.net/wkx0aeo.css" />
    <meta charset="UTF-8" />
    <meta property="og:site_name" content="Essential Randomness" />
    <meta property="og:title" content={title} />
    <meta name="description" content={description} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={preview} />
    <meta name="twitter:image" content={preview} />
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:site" content="@EssentialRandom" />
    <meta property="twitter:description" content={description} />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <link
      rel="icon"
      type="image/png"
      href="/favicon/favicon-16x16.png"
      sizes="16x16"
    />
    <link
      rel="icon"
      type="image/png"
      href="/favicon/favicon-32x32.png"
      sizes="32x32"
    />
    <link rel="apple-touch-icon" href="/favicon/apple-touch-icon.png" />
    <title set:html={title} />
    <slot name="head" />
    <script
      defer
      data-domain="essentialrandomness.com"
      src="https://plausible.io/js/script.js"></script>
  </head>
  <body>
    <Nav />
    <main>
      <aside class="wip">
        <Image
          src={bobaWip}
          alt="Boba-tan working hard"
          width={400}
          height={334}
        />
        <div>
          <div class="title">This Resume is a Work In Progress!</div>
          <div>
            <strong> I'm starting a consulting practice!</strong> This resume will
            evolve across the next weeks to properly showcase my skills and experience.
            It is accurate, but may be lacking details and structure.
          </div>
          <div>
            If you want to be among my first clients for a very special price,
            <a href="mailto:essential.randomn3ss@gmail.com">contact me</a>!
          </div>
        </div>
      </aside>
      <slot />
    </main>
  </body>
</html>

<style is:global>
  nav.toc {
    display: none;
  }

  main {
    width: 700px;
  }

  h1 {
    text-wrap: balance;
  }

  .card {
    border: 2px solid black;
    box-shadow: var(--box-shadow);
    padding: 20px 25px;
    border-radius: 15px;
    display: flex;
    flex-direction: column;
    gap: 5px;
    width: min(100%, 350px);
  }

  .card:has(:target) {
    background-color: rgb(240, 240, 240);
    box-shadow: var(--box-shadow-deep);
  }

  .card h3 {
    margin: 0;
    font-size: 1.3em;
  }

  h2 {
    font-size: 1.8em;
  }

  .card > h3 > a::after {
    content: none;
  }

  .card ul {
    margin-block: 0;
    padding-inline-start: 20px;
  }

  .cards {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 10px;
    row-gap: 12px;
    margin-top: 30px;
  }

  .card.experience:last-child {
    grid-column: 1 / span 2;
    width: 100%;
  }

  .card.experience:last-child :where(p, ul) {
    max-width: 80%;
  }

  @media (max-width: 500px) {
    .cards {
      display: flex;
      flex-direction: column;
    }
    .card {
      width: 100%;
    }
  }

  .card.schedule {
    max-width: 500px;
    width: 100%;
    margin: 30px auto;
    text-align: center;

    p {
      margin: 0;
    }

    p:first-of-type a {
      font-size: 30px;
    }
  }
</style>

<style>
  aside {
    display: flex;
    align-items: center;
    gap: 15px;
    margin: 30px 20px;
    padding: 5px 15px;
    img {
      width: 200px;
      height: auto;
    }
    .title {
      font: var(--font-family-title);
      font-weight: 800;
      width: fit-content;
      font-size: 1.3em;
    }
    & > div {
      display: flex;
      flex-direction: column;
      gap: 10px;
    }
  }

  @media (max-width: 500px) {
    aside {
      flex-direction: column;
    }
  }
</style>

<script>
  import { annotate } from "rough-notation";

  window.addEventListener("load", () => {
    const containers = document.querySelectorAll<HTMLDivElement>(`aside.wip`);
    if (containers) {
      containers.forEach((container) => {
        const annotation = annotate(container, {
          type: "box",
          animate: false,
          padding: 6,
          color: "#444",
        });
        annotation.show();

        const title = container?.querySelector<HTMLDivElement>(".title");
        if (title) {
          const annotation = annotate(title, {
            type: "highlight",
            animate: false,
            color: "yellow",
            padding: 8,
            multiline: true,
          });
          annotation.show();
        }
      });
    }
  });
</script>
